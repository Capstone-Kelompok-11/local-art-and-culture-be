name: test, build, development
on: 
  push:
    branches:
      - development
jobs:
  build_docker:
    name: build and push to dockerhub
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: docker build
      run: docker build -t peacechopath/lokasani:1.1.0 .
    - name: docker login
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: push to docker hub
      run: docker push peacechopath/lokasani:1.1.0
  deploy:
    name: deploy to cloud with aws ec2
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
    - uses: actions/checkout@v3
    - name: login to ec2
      env: 
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.USER_NAME }}
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/nicholas_key.pem
        chmod 400 ~/.ssh/nicholas_key.pem
        cat >>~/.ssh/config <<END
        Host staging
        HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/nicholas_key.pem
          StrictHostKeyChecking=no
        END
    - name: login ec2, docker pull and running container
      run: ssh staging ' docker pull peacechopath/lokasani:1.1.0 && docker run -d -e OPEN_AI_KEY=${{secrets.OPEN_AI_KEY}} -e DB_USER=${{secrets.DB_USER}} -e DB_PASSWORD=${{secrets.DB_PASSWORD}} -e DB_HOST=${{secrets.DB_HOST}} -e DB_PORT=${{secrets.DB_PORT}} -e DB_NAME=${{secrets.DB_NAME}} -e APP_PORT=${{secrets.APP_PORT}} -e SECRET_JWT=${{secrets.SECRET_JWTSECRET_JWT}} -e BUCKET_NAME=${{secrets.BUCKET_NAME}} -e ACCOUNT_ID=${{secrets.ACCOUNT_ID}} -e ACCESS_KEY_SECRET=${{secrets.ACCESS_KEY_SECRET}} -e ACCESS_KEY_ID=${{secrets.ACCESS_KEY_ID}} -p 8080:8080 --name development peacechopath/lokasani:1.1.0'



