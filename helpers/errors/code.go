package errors

import (
	"net/http"
)

func GetCodeError(err error) int {
	switch err {
	case ERR_EMAIL_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_MESSAGE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_RESPONSE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_IMAGE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_RATING_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_ULASAN_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_COMMENT_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_PRICE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_DESCRIPTION_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_STATUS_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_PASSWORD_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_NAME_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_CATEGORY_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_TYPE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_DELETE_ADMIN:
		return http.StatusInternalServerError
	case ERR_DELETE_CATEGORY:
		return http.StatusInternalServerError
	case ERR_DELETE:
		return http.StatusInternalServerError
	case ERR_DELETE_USER:
		return http.StatusInternalServerError
	case ERR_GET_ADMIN_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_GET_CATEGORY_BAD_REQUEST_TYPE:
		return http.StatusNotFound
	case ERR_GET_USER_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_GET_PAYMENT_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_GET_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_GET_ADMIN_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_GET_DATA:
		return http.StatusInternalServerError
	case ERR_REGISTER_ADMIN_DATABASE:
		return http.StatusInternalServerError
	case ERR_REGISTER_USER_DATABASE:
		return http.StatusInternalServerError
	case ERR_BCRYPT_PASSWORD:
		return http.StatusInternalServerError
	case ERR_TOKEN:
		return http.StatusInternalServerError
	case ERR_WRONG_PASSWORD:
		return http.StatusBadRequest
	case ERR_EMAIL_NOT_FOUND:
		return http.StatusNotFound
	case ERR_UPDATE_DATA:
		return http.StatusInternalServerError
	case ERR_ROLE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_GET_ROLE_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_GET_CATEGORY_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_GET_PRODUCT_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_GET_COMMENT_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_GET_TICKET_BAD_REQUEST_ID:
		return http.StatusNotFound
	case ERR_DELETE_ROLE:
		return http.StatusInternalServerError
	case ERR_TITLE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_CONTENT_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_PHONE_NUMBER_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_OUTLET_NAME_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_CREATE_ROLE:
		return http.StatusInternalServerError
	case ERR_CREATE_PAYMENT:
		return http.StatusInternalServerError
	case ERR_GET_CREATOR_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_DELETE_CREATOR:
		return http.StatusInternalServerError
	case ERR_CREATE_CREATOR_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_TICKET_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_GUEST_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_ARTICLE_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_CATEGORY_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_PRODUCT_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_COMMENT_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_RATING_DATABASE:
		return http.StatusInternalServerError
	case ERR_GET_SHIPPING_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_EVENT_DATE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_EVENT_SCHEDULE_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_CREATE_WISHLIST_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_SAVE_DATABASE:
		return http.StatusInternalServerError
	case ERR_CREATE_EVENT_DATABASE:
		return http.StatusInternalServerError
	case ERR_GET_COMMENT_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_GET_SAVE_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_QTY_IS_EMPTY:
		return http.StatusBadRequest
	case ERR_CREATE_TRANSACTION_DATABASE:
		return http.StatusInternalServerError
	case ERR_GET_TRANSACTION_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_DELETE_TRANSACTION:
		return http.StatusInternalServerError
	case ERR_CREATE_TRANSACTION_DETAIL:
		return http.StatusInternalServerError
	case ERR_GET_TRANSACTION_DETAIL_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_GET_FILES_BAD_REQUEST_ID:
		return http.StatusBadRequest
	case ERR_CREATE_FILES_DATABASE:
		return http.StatusInternalServerError
	case ERR_SOURCE_IS_EMPTY:
		return http.StatusBadRequest
	default:
		return http.StatusInternalServerError
	}
}
